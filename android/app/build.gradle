plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"  // Ensure this is applied after the Android and Kotlin plugins
    id 'com.google.gms.google-services'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}





android {
    namespace = "com.example.flutter_application_1"
    compileSdk = 34  // Set this explicitly to the latest SDK version you want to use

    ndkVersion = "27.0.12077973"  // Set the required NDK version explicitly

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.dreamspace.flutter_application_1"
        minSdkVersion 23  // Ensure minSdkVersion is explicitly set to 23
        targetSdkVersion 34  // Set targetSdkVersion explicitly
        versionCode 6
        versionName "1.2.2"
    }
    

    android {
    // ...

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }

}
}

flutter {
    source = "../.."
}

dependencies {
    implementation 'com.google.firebase:firebase-auth:23.1.0'
}
